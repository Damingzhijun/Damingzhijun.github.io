document.write(Date()); 输出时间，可以直接使用

------------
<p id="demo">我的第一个段落。</p>
<script>
document.getElementById("demo").innerHTML="段落23已修改。";
</script>        定位标签demo并改变其值，可以直接输出，不用调用

------------

引入外部的js
外部js的代码：
function myFunction()
{
document.getElementById("demo").innerHTML="我的第一个 JavaScript 函数";
}      意思是创造了名为myFunction的函数，这个函数的效果是定位demo标签，在标签所代表的内容上进行改变，改变为引号内的文字

<p id="demo">一个段落。</p>
<button type="button" onclick="myFunction()">点击这里</button>
<p><b>注释：</b>myFunction 保存在名为 "myScript.js" 的外部文件中。</p>
<script src="myScript.js"></script>

button 的意思是按钮，上面的type可有可无 ,点击这里是按钮的名字

--------------------

<h1 id="myH1"></h1>
<p id="myP"></p>
<script>
// 输出标题：	
document.getElementById("myH1").innerHTML="Welc22ome to my22 Homepage";
// 输出段落：
document.getElementById("myP").innerHTML="This is my2 first paragraph.";
</script>
<p><b>注释：</b>注释不222会被执行。</p>


第一个执行失败第二个就不执行了

----------
//  前面加这个就不会执行了
//document.getElementById("myH1").innerHTML="欢迎来到我的主页"

/*
document.getElementById("myH1").innerHTML="欢迎来到我的主页";
document.getElementById("myP").innerHTML="这是我的第一个段落。";
*/

多行注释，不会执行

-------

<script>
var firstname;
firstname="Hege";
document.write(firstname);
document.write("<br>");
firstname="Tove";
document.write(firstname);
</script>
<p>上面的脚本定义了一个变量，给变量分配一个值并显示，再次修改变量的值后，再次显示。
</p>
-----------------

var time=new Date().getHours(); 得到小时

-----------

<input type="button" onclick="myFunction()" value="显示警告框" />

一个按钮，value是按钮的名字

onclick是点击事件

alert("Hello\nHow are you?")     带有换行的警告框


<button onclick="myFunction()">点我</button>
<p id="demo"></p>
<script>
function myFunction(){
	var x;
	var r=confirm("按下按钮!");   //这一行是确认框的内容，加载了确认框，返回真假     
	if (r==true){            // 判断，等于真
		x="你按下了\"确定\"按钮!";
	}
	else{
		x="你按下了\"取消\"按钮!";
	}
	document.getElementById("demo").innerHTML=x;
}


单引号和双引号都可以的，


function myFunction(){
          var x;
           var person=prompt("请输入你的名字","Harry Potter");    第一个函数是提示框的内容，第二个函数是提示框的内容框的内容  ,返回的是框框内输入的内容
	if (person!=null && person!=""){         函数不等于空 且不等于""
	    x="你好 " + person + "! 今天感觉如何?";
	    document.getElementById("demo").innerHTML=x;
	}             
}

a || b：如果a是true，那么b不管是true还是false，都返回true。因此不用判断b了，这个时候刚好判断到a，因此返回a。

　　　如果a是false，那么就要判断b，如果b是true，那么返回true，如果b是false，返回false，其实不就是返回b了吗。

a && b：如果a是false，那么b不管是true还是false，都返回false，因此不用判断b了，这个时候刚好判断到a，因此返回a。

　　　如果a是true，那么就要在判断b，和刚刚一样，不管b是true是false，都返回b。

a||b  先行判断a，如果a是成立就返回a如果a不行就返回b
a&&b 先行判断a  如果a是不成立的就返回a ,a成立则返回b

在if 中&&是或
|| 是且
-------------------------------


<button onclick="myFunction('Harry Pott2er','Wi2zard')">点击这里</button>
<script>
function myFunction(name,job){
	alert("Welcome " + name + ", the " + job);
}
</script>

带有参数的函数


-----------------------

function myFunction(){
	var x="";
	for (i=0;i<5;i++){       如果i大于5就跳出循环，执行的条件是i小于5，条件成立时执行

		x=x + "这个数字是" + i + "<br>";
	}
	document.getElementById("demo").innerHTML=x;
}



function myFunction(){
    var x="",i=0;
    while (i<5){             如果i小于5则执行，条件成立时执行
        x=x + "该数字为 " + i + "<br>";
        i++;
    }
    document.getElementById("demo").innerHTML=x;
}

---------------------------
video.js播放m3u8格式视频

<link href="//cdn.bootcss.com/video.js/7.0.0-alpha.1/alt/video-js-cdn.css" rel="stylesheet">
<script src="//cdn.bootcss.com/video.js/7.0.0-alpha.1/video.min.js"></script>
//video.js须配合第三方的videojs库videojs-contrib-hls.js来播放.m3u8视频
<script src="https://unpkg.com/videojs-contrib-hls/dist/videojs-contrib-hls.js"></script>

//加入vjs-big-play-centered类可使播放按钮居中显示
<video id="video" class="video-js vjs-big-play-centered" data-setup="{}"  controls width="100%" height="100%">
       <source src="https://tx1.yunchuanglive.com/live/SSAA-066184-BAACB.m3u8"/>
</video>

export default {
    name: 'VideoDetail',
    data() {
        return {  
            video:null
        }
    },
    mounted() {     
        this.getVideo();
    },
    methods:{
        getVideo(url){
            let video=videojs("video");
            video.ready(()=>{
                video.play();
            })
            this.video = video;
        },
        //退出页面时销毁video实例
        handleGoToBack(){
            //销毁，防止一直不间断接受数据
            this.video.dispose();
        }
    }
}
————————————————

p>点击按钮，测试带有 break 语句的循环。</p>
<button onclick="myFunction()">点击这里</button>
<p id="demo"></p>
<script>
function myFunction(){
	var x="",i=0;
	for (i=0;i<10;i++){
		if (i==6){
    		break;    跳出循环
			}
    	x=x + "该数字为 " + i + "<br>";
    }
	document.getElementById("demo").innerHTML=x;
}
</script>


<p>点击下面的按钮来执行循环，该循环会跳过 i=3 的数字。</p>
<button onclick="myFunction()">点击这里</button>
<p id="demo"></p>
<script>
function myFunction(){
	var x="",i=0;
	for (i=0;i<10;i++){
  		if (i==3){
    		continue;        i=3的时候跳出，但没有跳出循环，可以理解为不执行
    	}
		x=x + "该数字为 " + i + "<br>";
  	}
	document.getElementById("demo").innerHTML=x;
}
</script>



<p>点击下面的按钮，循环遍历对象 "person" 的属性。</p>
<button onclick="myFunction()">点击这里</button>
<p id="demo"></p>
<script>
function myFunction(){
	var x;
	var txt="";
	var person={fname:"Bill",lname:"Gates",age:5346,a3:5346};   age,a3等名称要不同，后面代表其的值，可以比为数组
	for (x in person){
		txt=txt + person[x];    加了五次，全部内容被加入
	}
	document.getElementById("demo").innerHTML=txt;
}
</script>

-----------------------------
<script>
function displayDate(){
	document.getElementById("demo").innerHTML=Date();
}
</script>

<button type="button" onclick="displayDate()">显示日期</button>

---------------------
onmouseover 事件
<script>
function writeText(txt){
	document.getElementById("desc").innerHTML=txt;
}
</script>
</head>

<body>
<img src ="planets.gif" width ="145" height ="126" alt="Planets" usemap="#planetmap" />
<map name="planetmap">
<area shape ="rect" coords ="0,0,82,126"
onmouseover="writeText('太阳和气体巨星类似木星是太阳系中最大的物体。')"
href ="sun.htm" target ="_blank" alt="Sun" />
<area shape ="circle" coords ="90,58,3"
onmouseover="writeText('从地球上很难研究水星，因为它太接近太阳。')"
href ="mercur.htm" target ="_blank" alt="Mercury" />
<area shape ="circle" coords ="124,58,8"
onmouseover="writeText('至到1960年，金星经常被认为是地球的孪生妹妹，因为金星是最靠近我们的行星，并且两个行星有很多相似的特点。')" t')"
href ="venus.htm" target ="_blank" alt="Venus" />
</map> 
<p id="desc">鼠标在太阳和星星上移动，可以看到不同的描述。</p>

</body>

--------------------

<script>
var txt="";
function message(){
	try {            尝试
		adddlert("Welcome guest!");
	}
	catch(err) {            抓住错误
		txt="本页有一个错误。\n\n";
		txt+="错误描述：" + err.message + "\n";   \n是换行，txt+的意思是tex=tex+内容
		txt+="点击确定继续。\n\n";
		alert(txt);
	}
}
</script>
</head>
<body>

<input type="button" value="查看消息" onclick="message()" />





<script>
var txt="";
function message(){
	try{
		adddlert("Welcome guest!");
	}
	catch(err){
		txt="本页有一个错误。\n\n";
		txt+="单击确定继续跳转\n";	
		txt+="或者单击取消返回\n\n";
		if(confirm(txt)){               if默认条件为真
			document.location.href="//www.runoob.com/";
		}
	}
}
</script>
</head>

<body>
<input type="button" value="查看消息" onclick="message()" />
</body>

——-----------------------
 这个有疑惑
<script>
onerror=handleErr;
var txt="";
function handleErr(msg,url,l){
	txt="该页面有一个错误\n\n";
	txt+="错误: " + msg + "\n";
	txt+="URL: " + url + "\n";
	txt+="行: " + l + "\n\n";
	txt+="点击确定继续。\n\n";
	alert(txt);
	return true;
}
function message(){
	adddlert("Welcome guest!");
}
</script>
</head>

<body>
<input type="button" value="查看消息" onclick="message()" />
</body>

----------------------
随机生成一个链接

<p id="demo"></p>
<script>
var r=Math.random();    random() 方法可返回介于 0（包含） ~ 1（不包含） 之间的一个随机数。


var x=document.getElementById("demo")
if (r>0.5){
	x.innerHTML="<a href='http://www.runoob.com'>访问菜鸟教程</a>";
}
else{
	x.innerHTML="<a href='http://wwf.org'>Visit WWF</a>";
}
</script>

--------------------------


switch 语句用于基于不同的条件来执行不同的动作。

switch 语句是 JavaScript 条件语句的一部分，用于根据不同的条件执行不同的动作。 使用 switch 从多个语句块中选择一个执行。

switch 语句计算每个表达式。随后表达式的值会与结构中的每个 case 的值做比较。如果存在匹配，则与该 case 关联的代码块会被执行。

switch 语句通常与 break 或 default 关键字一起使用。两者都是可选的:

break 关键字用于跳出switch代码块。会终止switch代码块的执行。 如果忽略该关键字，swith 语句的下一个代码块会被执行。

default 关键字 来规定匹配不存在时做的事情。 default 关键字在 switch 语句中只能出现一次。虽然是可选参数，但是建议都使用该参数，在不是我们期望的情况下，可以使用它输出信息。

<script>
function myFunction(){
	var x;
	var d=new Date().getDay();
	switch (d){
  		case 0:x="今天是星期日";
    	break;
 		case 1:x="今天是星期一";
        break;
  		case 2:x="今天是星期二";
        break;
        case 3:x="今天是星期三";
   	 	break;
  		case 4:x="今天是星期四";
    	break;
  		case 5:x="今天是星期五";
        break;
  		case 6:x="今天是星期六";
    	break;
 	 default:            如果以上都不成立，则
                    默认代码块
}
	document.getElementById("demo").innerHTML=x;
}
</script>
---------------------------


高级 JavaScript 实例
------------

创建一个欢迎 cookie
<head>
<script>
function setCookie(cname,cvalue,exdays){
	var d = new Date();
	d.setTime(d.getTime()+(exdays*24*60*60*1000));
	var expires = "expires="+d.toGMTString();
	document.cookie = cname+"="+cvalue+"; "+expires;
}
function getCookie(cname){
	var name = cname + "=";
	var ca = document.cookie.split(';');
	for(var i=0; i<ca.length; i++) {
		var c = ca[i].trim();
		if (c.indexOf(name)==0) { return c.substring(name.length,c.length); }
	}
	return "";
}
function checkCookie(){
	var user=getCookie("username");
	if (user!=""){
		alert("欢迎 " + user + " 再次访问");
	}
	else {
		user = prompt("请输入你的名字:","");
  		if (user!="" && user!=null){
    		setCookie("username",user,30);
    	}
	}
}
</script>
</head>

--------------------

简单的计时


<p>点击按钮，在等待 3 秒后弹出 "Hello"。</p>
<button onclick="myFunction()">点我</button>
<script>
function myFunction(){
	setTimeout(function(){alert("Hello")},3000);
}
</script>

</body>
</html>

---------------------------


<p>在页面显示一个时钟</p>
<p id="demo"></p>
<script>
var myVar=setInterval(function(){myTimer()},1000);
function myTimer(){
	var d=new Date();
	var t=d.toLocaleTimeString();
	document.getElementById("demo").innerHTML=t;
}
</script>

------------------------

在一个无穷循环中的计时事件

<script>
var c=0
var t
var timer_is_on=0;
function timedCount(){
	document.getElementById('txt').value=c;
	c=c+1;
	t=setTimeout("timedCount()",1000);   自己点击自己，所以循环了
}
function doTimer(){
	if (!timer_is_on)
	{
		timer_is_on=1;
		timedCount();
	}
}
</script> 
</head>

<body>
<form>
<input type="button" value="开始计数!" onClick="doTimer()">
<input type="text" id="txt">

--------------------------------
使用计时事件制作的钟表
<script>
function startTime(){
	var today=new Date();
	var h=today.getHours();
	var m=today.getMinutes();
	var s=today.getSeconds();// 在小于10的数字前加一个‘0’
	m=checkTime(m);
	s=checkTime(s);
	document.getElementById('txt').innerHTML=h+":"+m+":"+s;
	t=setTimeout(function(){startTime()},500);
}
function checkTime(i){
	if (i<10){
		i="0" + i;
	}
	return i;
}
</script>
</head>
<body onload="startTime()">
	
<div id="txt"></div>

--------------------------------
创建对象的实例
<script>
var person={firstname:"John",lastname:"Doe",age:50,eyecolor:"blue"}
document.write(person.firstname + " is " + person.age + " years old.");
</script>
--------------------------------
创建用于对象的模板
<script>
function person(firstname,lastname,age,eyecolor){
	this.firstname=firstname;
	this.lastname=lastname;
	this.age=age;
    this.eyecolor=eyecolor;
}
myFather=new person("John","Doe",50,"blue");
document.write(myFather.firstname + " is " + myFather.age + " years old.");
</script>
--------------------------------
为字符串添加样式
<script>
var txt = "Hello World!";
document.write("<p>字体变大: " + txt.big() + "</p>");
document.write("<p>字体缩小: " + txt.small() + "</p>");
document.write("<p>字体加粗: " + txt.bold() + "</p>");
document.write("<p>斜体: " + txt.italics() + "</p>");
document.write("<p>固定定位: " + txt.fixed() + "</p>");
document.write("<p>加删除线: " + txt.strike() + "</p>");
document.write("<p>字体颜色: " + txt.fontcolor("green") + "</p>");
document.write("<p>字体大小: " + txt.fontsize(6) + "</p>");
document.write("<p>下标: " + txt.sub() + "</p>");
document.write("<p>上标: " + txt.sup() + "</p>");
document.write("<p>链接: " + txt.link("http://www.w3cschool.cc") + "</p>");
document.write("<p>闪动文本: " + txt.blink() + " (不能用于IE,Chrome,或者Safari)</p>");
</script>

--------------------------------

--------------------------------

--------------------------------

--------------------------------

--------------------------------

--------------------------------

