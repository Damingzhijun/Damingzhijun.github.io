
搜索地址：

http://www.81zw.la/modules/article/search.php,{
  "charset": "gbk",
  "method": "POST",
  "body": "searchkey={{key}}&searchtype=articlename"
}



/search.php,{
  "charset": "gbk",
  "method": "POST",
  "body": "keyword={{key}}"
}


https://www.ixs.cc/search.htm?keyword={{key}}


https://www.aiquxs.org/modules/article/search.php?searchkey={{key}},{
  "charset": "gbk"
}





https://www.2kzw.com/modules/article/search.php,{
  "headers": "{Accept-Encoding:*}",
  "charset": "gbk",
  "method": "POST",
  "body": "searchkey={{key}}&searchtype=articlename"
}







书籍列表规则

class.novelslistss@tag.li
//*[@class="shulist"]/ul
//*[@class="result-list"]/div




书名规则
class.s2@tag.a.0@text
//a[contains(@href,"book")]/text()




作者规则
class.s4@text
//a[contains(@href,"author")]/text()




分类规则
//li[6]/text()





最新章节规则
class.s3@tag.a.0@text
//a[contains(@href,"read")]/text()




封面规则
//a[contains(@href,"book")]/@href<js>result.replace(/.*?(\d*?)(\d{1,3})\//,'/files/article/image/$1/$1$2/$1$2s.jpg').replace('//','/0/')</js>

//*[@property="og:image"]/@content






详情页url规则
class.s2@tag.a.0@href

//a[contains(@href,"book")]/@href


//tag/td[0]/tag/a/@href|//td[1]/a/@href


——————————————
发现


战::http://www.xqqxs.com/fenlei2/searchPage&&历史军事::http://www.xqqxs.com/fenlei3/searchPage&&网游科幻::http://www.xqqxs.com/fenlei4/searchPage&&侦探推理::http://www.xqqxs.com/fenlei5/searchPage&&穿越重生::http://www.xqqxs.com/fenlei6/searchPage&&古典言情::http://www.xqqxs.com/fenlei7/searchPage&&现代言情::http://www.xqqxs.com/fenlei8/searchPage&&耽美同人::http://www.xqqxs.com/fenlei9/searchPage&&综合其
——————————————————————————————
详情

书名规则
id.intro@tag.h3.0@text##.*\《|\》.*
//*[@property='og:novel:book_name']/@content



作者规则
//*[@property='og:novel:author']/@content




字数规则
//*[@property='og:novel:update_time']/@content






分类规则
//*[@property='og:novel:status']/@content


最新章节
//*[@property='og:novel:latest_chapter_name']/@content




简介规则
id.intro@text##.*简介:
//*[@property='og:description']/@content





封面规则
class.cover@tag.img.0@src
//*[@property='og:image']/@content



目录url规则
//*[@property='og:novel:read_url']/@content

//*[@property="og:url"]/@content


——————————————————————————————
目录列表规则
id.list@tag.dd
@whole://*[@id="readerlist"]//a
class.chapterTitle



章节名规则
tag.a@text
//text()


章节url规则
tag.a@href
//@href


目录下一页规则





——————————————————————————————
正文规则
id.content@html##一秒记住.*免费阅读！


//*[@class='read-content']<js>result.replace(/diǎn/g,'点').replace(/dǐng/g,'顶').replace(/\d*顶\d*点\d*小.*?，/g,'')</js>



//*[@id='zjneirong']


//div[@id="mycontent"]#textNodes

//*[@id="content"]

//div[@id="mycontent"]#textNodes


id.content@html




正文下一页url规则


//*[@class="bottem1"]/a[text()="下一章"]/@href




——————————

!0是第一个节点不取

//*[@property='og:description']/@content   取content后面

id.list@dd!0:1:2:3:4:5:6:7:8:9:10:11     去除12个最新章节，目录上方、
dd@a@text
id.content@textnodes

https://www.baidu.com/s?&wd=123

https://www.baidu.com/s?&wd={{key}}%20site:fpzw.com&ie=utf-8
class.c-result result!2:3:4:5:6:7:8:9:10:11:12:13
class.c-title-text@em@text
class.c-result-content@a@href

(使用百度搜索的时候在详情页url中加入)
##$##,{"webView":ture}
class.c-result-content@a@href##$##,{"webView":ture}

@textNodes


https://m.so.com/index.php?q={{key}} site:fpzw.com
class.res-list!0:2:3:4:5:6:7:8:9:10:11:12:13
class.res-list@h3@text
//a[contains(@href,"so")]/@href


https://m.baidu.com/s?word={{key}} site:xuanjiezhimen.org



text.下一页@href


class.shop-info@text##《|》
class.shop-info.1@text##\[著]



正则替换##
1.删除A之后的所有字符用：A.*$

2.删除A之前的所有字符用：^([^s]*)A

####如果是其他字符就把A替换为其他字符

注释：如何是特殊字符注意转义


怎么用正则表达式提取">之后</之前的文本内容
/>([^<]*)<\/g
(?<=\">).+?(?=</)
A([^<]*)A/g
(?<=\A).+?(?=A)

$.title@js:java.put("number",0);result.replace(/<\/?em>/,"")

$.title##<[^>]+>
重复的去除<>标签

##一秒记住.*?免费阅读！|笔.{0,8}趣.{0,8}阁.*

http://www.xiaoshuo777.net/modules/article/search.php,{
  "charset": "gbk",
  "method": "POST",
  "body": "【name=】=【value】&type=【】&【】={{key}}"
}


从后向前也可以，主要是定位

规则最后加@js:"网址"+result
##正则表达式##替换内容###

href##([\s\S]+)##https://m.wanbentxt.com$1###
替换网址为m.

@css:.booklist-card-content>a@text    定位一个 </a>之前

{{page}}


tag.img@data-loadsrc##^##https://t2cy.com ，最前面加上这个网址
##$##  在最后面加上网址

http://itrafficnet.com/api/videoplay/{$.id}?uuid=84fc81a928ee5e58


https://www.yousuu.com/api/search?type=booklist&value={{key}}&page={{page}}&t={{Date.now()}}


shortcut icon 网页图标
$.Name@put:{a:$.Id} 获取这时的ID存储入a中

————————————————订阅源

————内容：

<js>
json=JSON.parse(result).rescont;
title=json.title;
video=json.videopath;
img=json.coverpath;
result="<video src=\""+video+"\" width=\"100%\" height=\"285px\" controls=\"controls\"  poster=\""+img+"\">
</video>
<p style=\"color:\#000000\;text-indent: 2em\">"+title+"</p>";

"<html>
<head>
<meta charset=\"utf-8\">
<title>丝瓜影视</title>
<style>body\{background-color:\#ffffff\}</style></head>"+ "<body>"+result+"</body>
</html>"
</js>

——

<js>result</js>

_____

<js>var doc=org.jsoup.Jsoup.parse(result.replace(/data-src=/g,"src="));

"<style>img{max-width:100% !important; width:auto; height:auto;</style><h2>"+doc.getElementsByTag("h1").text()+"</h2>"+doc.getElementById("js_content").outerHtml()</js>

document.getElementById("test").getElementsByTagName("span")
层层递进

.value 寻找所有子标签
getElementsByName
var data = java.ajax(url);
data = JSON.parse(data);
var data=org.jsoup.Jsoup.parse(result) 获取网页源码
.getElementById("")
.getElementsByClass("")
.getElementsByTag("")
String()
.outerHtml()
.attr("href")
<script src="https://cdn.jsdelivr.net/npm/webtorrent-element@latest/dist/webtorrent-element.min.js"></script>
<web-torrent src="magnet:?xt=urn:btih:08ada5a7a6183aae1e09d831df6748d566095a10&dn=Sintel&tr=wss%3A%2F%2Ftracker.btorrent.xyz&tr=wss%3A%2F%2Ftracker.fastcast.nz&tr=wss%3A%2F%2Ftracker.openwebtorrent.com&ws=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2F&xs=https%3A%2F%2Fwebtorrent.io%2Ftorrents%2Fsintel.torrent"
  file="Sintel.mp4"
  />
磁力链接

getElementById 是通过id来获取元素，id在HTML中是唯一的，所以获取到的只有一个元素。

getElementsByTag
getElementsByTagNam 是通过标签名来获取元素，一种标签在HTML中可以有多个，所以获取到的是多个元素，且返回是以集合的形式返回。

getElementsByClass
getElementsByClassName 是通过类名来获取元素，同名的类在HTML中也能存在多个，所以获取到的也是多个元素，同样是以集合的形式反回。


var video =data.getElementById("userInfo").attr("data-target")获取属性值

match(//g)执行多次，没有g则执行一次

 if(num > 10){ }
else if( ){ }
else{ }

不等于的表述
!=
!==
前面不考虑类型，后者要求比较对象是相同类型且值一样

——
var text= data.select('div').select('.bofang')多重选择 .xxx为class属性
var x = data.select('a[target]')  查找文档中共包含 "target" 属性的 <a> 标签
var x = data.select("div > p"); 查找每个父元素为 <div> 的 <p> 元素
var x = data.select("#nihao"); 查找每个id为nihao的 元素
-------
阅读背景设置
<style>body{padding:10px;line-height:2em;letter-spacing: 2px;background:floralwhite;font-family:sans-serif-Helvetica;word-wrap: break-word}</style>
-----
链接规则：

<js>
var id=org.jsoup.Jsoup.parse(result)
var href='http://www.budejie.com'+id.getElementsByClass("bdsharebuttonbox").attr("data-url")
var href2=id.getElementsByClass(" j-audio").attr("data-mp3")
var b=0
var c=String(href)
var d=String(href2)
if(d.length>0){b=href2}else{b=href}
result=b
</js>

字符串的比较长度来判断链接
————
<js>
var data=org.jsoup.Jsoup.parse(result) 
var path1=data.getElementById("vpath").text()
var path2='https://v.5jjp.com/hls/'+path1
var video='<video controls="controls" src="'+path2+'">'
result=video
</js>
一个通用的视频代码
____________

<js>
var data=org.jsoup.Jsoup.parse(result)
var path=String(data)
var path2=path.replace(/plug.*css/,'https://www.cysbbs.xyz/plugin/ccreed_img_layer/view/css/ekko-lightbox.min.css')
result=path2
</js>
实现加载CSS文件，或去掉广告
---------

替换所有的 '.'

var vm_hostname=vm_ip.replace(/\./g,'')

/g代表匹配所有， '.'需要转义

-----

<js>
var id={{$.id}}
var bi=String(baseUrl)
var sou=bi.search(/yuedu/)
var path=''
if(sou!==-1){path='http://ku.mumuceo.com/yuedu/detail/index/id/'+id}
else{path='http://ku.mumuceo.com/yuedu/rss3/detail/id/'+id}
result=path
</js>
搜索判断选择网址, !== 不等于  -1没有找到
-----
var str = '1234A4567B789';

var aPos = str.indexOf('A');

var bPos = str.indexOf('B');

var r = str.substr(aPos + 1, bPos - aPos - 1);

document.body.innerText = r;

3、浏览器运行index.html页面，打印出了A和B之间的字符串。记得先转换为文本格式
-----------


<js>
var page=Number(JSON.parse(result).page);
var page=page+1;
var path=baseUrl
var path2=String(path).replace(/page.*&/, 'page='+page+'&' )
result=path2
</js>

列表下一页


<js>
var path1=String(baseUrl).match(/page=.*&/)[0]
var path2=path1.replace(/page=/,'').replace(/&/,'')
var num1=Number(path2)+1
var objk=String(baseUrl).replace(/page.*&/, 'page='+num1+'&' )
result=objk
</js>

列表下一页,用于读取不到page 数据的时候，从网址入手
__________
<js>
var id=org.jsoup.Jsoup.parse(result)
var url='https://app.movie'+id.getElementsByClass("btn btn-primary").attr("href")
var data = java.ajax(url)
var data2=org.jsoup.Jsoup.parse(data)
var path1=data2.getElementsByClass("stui-player__video")
var text=String(path1)
var class1=text.replace(/\\/g,'')
var class2=class1.match(/"https.*dex.m3u8"/)[0]
var video='<video controls="controls" src='+class2+'>'
result=video

</js>

详情页再次读取为内容页，播放视频

————
<js>
var json=JSON.parse(result).data;

"<style>body{padding:10px;line-height:2em;letter-spacing: 2px;background:floralwhite;font-family:sans-serif-Helvetica;word-wrap: break-word}
</style>"+json.map((x,i)=>"
<center>
<h4>No."+(i+1)+"</h4>
<img src='"+x.bookIcn+"' width='130px' height='180px' ></center>"
<p>书名:"+x.bookName+"</p>
<p>作者:"+x.bookAuthor+"</p>
<p>简介:"+x.bookAppraise+"</p>
<p>创建时间:"+x.createTime+"</p>
<p>更新时间:"+x.updateTime+"</p>
<p>*********************************</p>").join("\n")
</js>

——



<js>
"<style>img{max-width:100% !important; width:auto; height:auto;
</style>"+JSON.parse(result).results.map((x,i)=>"
<img src='"+x.url+"'>
<p style='text-align: center;'>
No."+(i+1)+"🔥"+x.createdAt.match(/\d+-\d+-\d+/)[0]+" "+x.who+"</p>").join("\n")
</js>

————

<js>
var songid = baseUrl.split('/').pop();-s分组-p取最后
var url = 'http://musicapi.taihe.com/v1/restserver/ting?method=baidu.ting.song.playAAC&format=json&songid=' + songid + '&from=web';
var data = java.ajax(url);
data = JSON.parse(data);
data.bitrate.file_link;
var video='<video controls="controls" src='+'"'+data.bitrate.file_link+'"'+'>'+'</video>'
result=video
</js>

————

<js>

data = JSON.parse(result)
var video='<div class="bottom"><div class="personalized">开始<div class="item to-list-link">'+'<audio id="kugou" height="100%" width="100%" controls="" src="'+data.url+'"'+'>'+'</audio> '
var pic='<div class="outer-wrapper page-width"><div class="player page-width"><div class="top"><h2 class="title episode-name"></h2></div><div class="background"><div class="background-mask"></div></div><div class="player-cover p-run"><img class="image" src="'+data.pic+'"></div>'
result='<html lang="en" data-dpr="1" style="font-size: 39.3091px;"><head>'+'<link rel="stylesheet" href="http://m.6yueting.com/css/play.css?v=1.0.2">'+pic+'<p>'+video
</js>
可封面旋转音乐
_________

@css:.td-post-content@html
<js>
var data=String(result)
result='<link rel="stylesheet" type="text/css" href="https://damingzhijun.gitee.io/yueduwenben/play/img.css" />'+result
</js>
上面的@css是先处理，然后返回结果result，<js>做二次处理，这里是连接了我制作的CSS，主要用于设置背景和图片大小
________
<video height="100%" width="100%" controls="controls" src="'+path1+'">
'<audio id="kugou" height="100%" width="100%" controls="" src="'+path1+'"'+'>
<img src=

'<div style="position:fixed; bottom:3px; right:5px"><a href="'+ + '">下一页</a></div>'  调整文字的位置

如果想完整获取网页，可以使用href转跳

<link href="https://unpkg.com/video.js/dist/video-js.min.css" rel="stylesheet">
<script src="https://unpkg.com/video.js/dist/video.min.js"></script>
最新的video的CSS加载
或者是：-储存在了自己的网站
<link href="https://damingzhijun.gitee.io/yueduwenben/play/video-js.min.css" rel="stylesheet">
<script src="https://damingzhijun.gitee.io/yueduwenben/play/video.min.js"></script>
以下为使用规则：
<video id="myVideo" class="video-js vjs-default-skin vjs-big-play-centered" controls preload="auto" width="10%" data-setup="{}"><source id="source" src= path type="application/x-mpegURL"> </video>


我的专属图标：https://gitee.com/Damingzhijun/yueduwenben/raw/master/img/jlq.png


读取Github的静态资源
将https://raw.githubusercontent.com替换为http://raw.githack.com即可。
好了，现在上面的地址就已经可以作为你想要的静态资源了。

————描述规则：

<p style="text-align:center">
<strong>{{$.title}}</strong>
</p>
<iframe src="https://player.bilibili.com/player.html?aid={{$.aid}}" width="350px" height="250px" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true">
</iframe>




<p style="text-align:center">
<strong>{class.block-title@a!1@text}</strong>
</p>
<iframe src="https://www.acfun.cn/player{class.block-title@a!1@href}" width="350px" height="250px" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true">
</iframe>




<link href="./video-js.css" rel="stylesheet"><script src="./video.js"></script><script src="./videojs-contrib-hls.min.js"></script>

-------------------------
有于限制，不能使用换行符，所以每个var之间要用;隔开

模板页:https://damingzhijun.github.io/mymob/123.html

var data=java.ajax('https://damingzhijun.github.io/mymob/123.html')
var id=org.jsoup.Jsoup.parse(data)
var script='<script>function myobject( ){   }'





